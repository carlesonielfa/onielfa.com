{"version":3,"sources":["Experience.js","Contact.js","AboutMe.js","Skills.js","NavTabs.js","custom_scrollable-section/utils/func.js","custom_scrollable-section/utils/scroll.js","custom_scrollable-section/utils/meta.js","custom_scrollable-section/utils/hash.js","custom_scrollable-section/Manager.js","custom_scrollable-section/ScrollableSection.js","custom_scrollable-section/index.js","Main.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","Experience","classes","Paper","className","Typography","variant","component","Contact","AboutMe","Skills","NavTabs","props","handleChange","event","value","setState","activeTabIndex","state","newValue","this","el","offset","elementPosition","offsetTop","window","scroll","top","left","behavior","tabs","Tabs","onChange","indicatorColor","textColor","centered","Tab","label","Link","to","scrollWithOffset","React","Component","withStyles","flexGrow","paddingTop","marginTop","debounce","func","wait","immediate","timeout","context","argss","args","later","apply","callNow","clearTimeout","setTimeout","createId","name","hash","scrollTo","options","test","navigator","userAgent","animatedScrollTo","speed","getScrollTop","document","body","scrollTop","documentElement","getElementOffset","element","getBoundingClientRect","bottom","Math","floor","checkElementRelevance","el1","el2","contains","top1","bottom1","top2","bottom2","checkLocationRelevance","getBestAnchorGivenScrollLocation","anchors","bestId","bestElement","Object","keys","forEach","id","extraOffset","offsetHeight","doesElementContainScrollTop","getMetaTagName","item","getAttribute","getMeta","metaName","metas","getElementsByTagName","arrayFrom","find","setMetaTags","metaTagsList","title","metaTags","tagName","currentTag","setAttribute","meta","createElement","appendChild","parentNode","removeChild","getDefaultMetaTags","reduce","acc","basePath","location","origin","pathname","getHash","manager","replace","slice","decodeURI","updateHash","anchor","affectHistory","exact","method","newPath","history","undefined","setDefaultMetaTags","removeHash","replaceState","defaultMetaTags","defaultConfig","keepLastAnchorHash","scrollBehaviour","scrollDelay","scrollOnImagesLoad","onSectionEnter","reloadOnGoingBack","getBasePath","newBasePath","endsWith","addListeners","addEventListener","scrollHandler","handleHashChange","removeListeners","removeEventListener","configure","config","resetDefaultMetaTags","goToTop","forcedHash","addAnchor","length","urlName","urlHash","href","forceHashUpdate","basePathName","normalizeMetaTags","anchorId","parentAnchor","object","key","getAnchoreByName","removeAnchor","onSectionChange","newAnchor","oldAnchor","newHash","split","console","log","getPath","nextState","path","prevState","handleScroll","nextAnchor","prevAnchor","e","runScrollingToSection","delay","goToSection","imagesAreLoaded","getElementById","currentStyle","getComputedStyle","eventDispatched","fireEvent","Event","dispatchEvent","parseInt","imgs","images","len","counter","incrementCounter","call","img","complete","pushState","reload","ScrollableSection","children","ref","ReactDOM","findDOMNode","refs","Manager","formatTitle","Array","isArray","Children","map","child","cloneElement","defaultProps","configureAnchors","Main","divStyle","marginBottom","navigate","style","margin","render"],"mappings":"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","file":"static/js/main.57383a44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}))\r\nexport default function Experience(){\r\n  const classes = useStyles();\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Typography variant=\"h4\" component=\"h2\">\r\n            Experience\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Paper can be used to build surface or other elements for your application.\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n          </Typography>\r\n        </Paper>\r\n     </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}))\r\n\r\nexport default function Contact() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Contact\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Paper can be used to build surface or other elements for your application.\r\n        </Typography>\r\n      </Paper>\r\n   </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}))\r\n\r\nexport default function AboutMe() {\r\n    const classes = useStyles();\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Typography variant=\"h4\" component=\"h2\">\r\n            About me\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Paper can be used to build surface or other elements for your application.\r\n          </Typography>\r\n        </Paper>\r\n     </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}))\r\n\r\nexport default function Skills() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Skills\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Paper can be used to build surface or other elements for your application.\r\n        </Typography>\r\n      </Paper>\r\n   </div>\r\n  );\r\n}","import React from \"react\";\r\nimport {Tab, Tabs, Paper} from '@material-ui/core/';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n  \r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        paddingTop : 0,\r\n        marginTop:0,\r\n        },\r\n});\r\n\r\n/**\r\n * Navigation tabs, scroll to desired hash on click, always visible at the top\r\n */\r\nclass NavTabs extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            activeTabIndex: props.value,\r\n        };\r\n    }\r\n    \r\n    navigate(newValue){\r\n        this.state.activeTabIndex = newValue\r\n    }\r\n    //Handle change in tab selection\r\n    handleChange = (event, value) => {\r\n    this.setState({ activeTabIndex: value });\r\n    };\r\n    //Scroll to desired hash with offset for the header\r\n    scrollWithOffset (el, offset)\r\n    {\r\n        const elementPosition = el.offsetTop - offset;\r\n        window.scroll({\r\n          top: elementPosition,\r\n          left: 0,\r\n          behavior: \"smooth\"\r\n        });    \r\n    }\r\n    render()\r\n    {\r\n        const { classes } = this.props;\r\n        const headerSize = 70;\r\n        //const { activeTabIndex } = this.state;\r\n        const tabs = (\r\n            <Tabs\r\n                value={this.state.activeTabIndex}\r\n                onChange={this.handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                <Tab label=\"About me\" value  = 'about' component={Link} to=\"#about\" scroll={el => this.scrollWithOffset(el, headerSize)}/>\r\n                <Tab label=\"Experience\" value  = 'experience' component={Link} to=\"#experience\" scroll={el => this.scrollWithOffset(el, headerSize)}/>\r\n                <Tab label=\"Skills\" value  = 'skills' component={Link} to=\"#skills\" scroll={el => this.scrollWithOffset(el, headerSize)}/>\r\n                <Tab label=\"Contact\" value = 'contact' component={Link} to=\"#contact\" scroll={el => this.scrollWithOffset(el, headerSize)}/>\r\n            </Tabs>\r\n        )\r\n\r\n        \r\n        return(\r\n            <Paper className={classes.root}>       \r\n                {tabs}\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nNavTabs.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default withStyles(styles)(NavTabs);","export const debounce = (func, wait, immediate) => {\r\n  let timeout\r\n  return (...argss) => {\r\n    const context = this\r\n    const args = argss\r\n    const later = () => {\r\n      timeout = null\r\n      if (!immediate) {\r\n        func.apply(context, args)\r\n      }\r\n    }\r\n    const callNow = immediate && !timeout\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(later, wait)\r\n    if (callNow) {\r\n      func.apply(context, args)\r\n    }\r\n  }\r\n}\r\n\r\nexport const createId = ({name, hash}) => `___scroll-section___${name || ''}___${hash || ''}`;\r\n\r\nexport const getAnchoreByName = (object = {}, name) => {\r\n  const key = Object.keys(object).find(key => object[key].name === name && !object[key].hash);\r\n  return key ? object[key] : null;\r\n}\r\n","import animatedScrollTo from 'animated-scroll-to';\r\n\r\nexport const scrollTo = (options) => {\r\n  const isIE = /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent);\r\n\r\n  if (isIE) {\r\n    animatedScrollTo(options.top, {\r\n      speed: options.behavior === 'smooth' ? 500 : 0,\r\n    });\r\n  } else {\r\n    window.scrollTo(options);\r\n  }\r\n}\r\n\r\nexport const getScrollTop = () => {\r\n  return document.body.scrollTop || document.documentElement.scrollTop\r\n}\r\n\r\n// get vertical offsets of element, taking scrollTop into consideration\r\nexport const getElementOffset = (element) => {\r\n  const scrollTop = getScrollTop()\r\n  const {top, bottom} = element ? element.getBoundingClientRect() : {top: 0, bottom: 0};\r\n  return {\r\n    top: Math.floor(top + scrollTop),\r\n    bottom: Math.floor(bottom + scrollTop)\r\n  }\r\n}\r\n\r\n// does scrollTop live within element bounds?\r\nexport const doesElementContainScrollTop = (element, extraOffset = 0) => {\r\n  const scrollTop = getScrollTop();\r\n  const offsetTop = getElementOffset(element).top + extraOffset;\r\n  return scrollTop >= offsetTop && scrollTop < offsetTop + element.offsetHeight;\r\n}\r\n\r\n// is el2's location more relevant than el2,\r\n// parent-child relationship aside?\r\nexport const checkLocationRelevance = (el1, el2) => {\r\n  const {top: top1, bottom: bottom1} = getElementOffset(el1);\r\n  const {top: top2, bottom: bottom2} = getElementOffset(el2);\r\n  if (top1 === top2) {\r\n    if (bottom1 === bottom2) {\r\n      // top and bottom of compared elements are the same,\r\n      // so return one randomly in a deterministic way\r\n      return el1 < el2;\r\n    }\r\n    // top of compared elements is the same, so return whichever\r\n    // element has its bottom higher on the page\r\n    return bottom2 < bottom1;\r\n  }\r\n  // top of compared elements differ, so return true\r\n  // if tested element has its top lower on the page\r\n  return top2 > top1;\r\n}\r\n\r\n// check if el2 is more relevant than el1, considering child-parent\r\n// relationships as well as node location.\r\nexport const checkElementRelevance = (el1, el2) => {\r\n  if (el1.contains(el2)) {\r\n    // el2 is child, so it gains relevance priority\r\n    return true;\r\n  } else if (!el2.contains(el1) && checkLocationRelevance(el1, el2)) {\r\n    // el1 and el2 are unrelated, but el2 has a better location,\r\n    // so it gains relevance priority\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// given a set of anchors, find which one is, given the following logic:\r\n// 1. children nodes are more relevant than parent nodes\r\n// 2. if neither node contains the other, and their top locations differ,\r\n//    the node with the top lower on the page is more relevant\r\n// 3. if neither node contains the other, and their top locations are the same,\r\n//    the node with the bottom higher on the page is more relevant\r\n// 4. if neither node contains the other, and their top and bottom locations\r\n//    are the same, a node is chosen at random, in a deterministic way,\r\n//    to be more relevant.\r\nexport const getBestAnchorGivenScrollLocation = (anchors, offset) => {\r\n  let bestId, bestElement\r\n\r\n  Object.keys(anchors).forEach((id) => {\r\n    const element = anchors[id].component;\r\n    if (doesElementContainScrollTop(element, offset)) {\r\n      if (!bestElement || checkElementRelevance(bestElement, element)) {\r\n        bestElement = element;\r\n        bestId = id;\r\n      }\r\n    }\r\n  })\r\n  return bestId;\r\n}\r\n","import arrayFrom from 'array-from';\r\n\r\nconst getMetaTagName = (item) => item.getAttribute('name') || item.getAttribute('property');\r\n\r\nconst getMeta = (metaName) => {\r\n  const metas = document.getElementsByTagName('meta');\r\n  return arrayFrom(metas).find(item => getMetaTagName(item) === metaName);\r\n}\r\n\r\nexport const setMetaTags = (metaTagsList = {}) => {\r\n  const {title, ...metaTags} = metaTagsList;\r\n\r\n  if (title) {\r\n    document.title = title;\r\n  }\r\n\r\n  Object.keys(metaTags).forEach(tagName => {\r\n    const currentTag = getMeta(tagName);\r\n\r\n    if (!metaTags[tagName]) {\r\n      // remove meta tags\r\n      if (currentTag) {\r\n        currentTag.parentNode.removeChild(currentTag);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (currentTag) {\r\n      // update a meta tag\r\n      currentTag.setAttribute('content', metaTags[tagName]);\r\n    } else {\r\n      // create a meta tag\r\n      const meta = document.createElement('meta');\r\n      meta.name = tagName;\r\n      meta.setAttribute('content', metaTags[tagName]);\r\n      document.getElementsByTagName('head')[0].appendChild(meta);\r\n    }\r\n  });\r\n\r\n}\r\n\r\nexport const getDefaultMetaTags = (metaTags) => {\r\n  if(metaTags) {\r\n    return metaTags;\r\n  }\r\n\r\n  const metas = document.getElementsByTagName('meta');\r\n\r\n  return arrayFrom(metas).reduce((acc, item) => {\r\n    return {...acc, [getMetaTagName(item)]: item.getAttribute('content')}\r\n  }, { title: document.title });\r\n}\r\n","import {createId} from './func';\r\nimport {setMetaTags} from './meta';\r\n\r\nconst basePath = `${window.location.origin}${window.location.pathname}`;\r\n\r\nconst getCurrentHash = () => decodeURI(window.location.hash.slice(1));\r\n\r\nexport const getHash = ({manager}) => {\r\n  const {basePath} = manager;\r\n  const name = window.location.pathname.replace(basePath.replace(window.location.origin, ''), '').slice(1);\r\n  const hash = getCurrentHash();\r\n  return createId({name, hash});\r\n}\r\n\r\nexport const updateHash = ({anchor, affectHistory, manager}) => {\r\n  \r\n  const {hash, name, meta, exact} = anchor;\r\n  const {basePath} = manager;\r\n  const method = affectHistory ? 'pushState' : 'replaceState';\r\n  const newPath = `${name ? `${exact ? window.location.origin : basePath}/${name}` : basePath}${hash ? `#${hash}` : ''}`;\r\n\r\n  window.history[method](undefined, undefined, newPath);\r\n\r\n  if (meta) {\r\n    setMetaTags(meta);\r\n  } else {\r\n    manager.setDefaultMetaTags();\r\n  }\r\n}\r\n\r\n// remove hash in url without affecting history or forcing reload\r\nexport const removeHash = ({manager}) => {\r\n  window.history.replaceState(\r\n    undefined,\r\n    manager.defaultMetaTags.title,\r\n    manager ? manager.basePath : basePath\r\n  );\r\n\r\n  manager.setDefaultMetaTags();\r\n}\r\n","import { debounce, getAnchoreByName } from './utils/func';\r\nimport { getBestAnchorGivenScrollLocation, getScrollTop, scrollTo } from './utils/scroll';\r\nimport { getHash, updateHash, removeHash } from './utils/hash';\r\nimport { setMetaTags, getDefaultMetaTags } from './utils/meta';\r\n\r\nconst defaultConfig = {\r\n  affectHistory: false,\r\n  debounce: 100,\r\n  keepLastAnchorHash: false,\r\n  offset: 0,\r\n  scrollBehaviour: 'smooth',\r\n  scrollDelay: 0,\r\n  scrollOnImagesLoad: false,\r\n  onSectionEnter: null,\r\n  meta: null,\r\n  reloadOnGoingBack: false\r\n}\r\n\r\nconst EVENT_IMAGES_LOADED = 'images:loaded';\r\n\r\nclass Manager {\r\n  constructor() {\r\n    this.anchors = {};\r\n    this.forcedHash = false;\r\n    this.config = defaultConfig;\r\n\r\n    this.scrollHandler = debounce(this.handleScroll, ~~this.config.debounce);\r\n    this.forceHashUpdate = debounce(this.handleHashChange, 1);\r\n\r\n    this.basePath = this.getBasePath();\r\n    this.basePathName = window.location.pathname;\r\n    this.imagesAreLoaded = false;\r\n\r\n    this.resetDefaultMetaTags();\r\n\r\n    setTimeout(() => {\r\n      let eventDispatched = false;\r\n      const fireEvent = () => {\r\n        if (!eventDispatched) {\r\n          const event = new Event(EVENT_IMAGES_LOADED);\r\n          window.dispatchEvent(event);\r\n        }\r\n        eventDispatched = true;\r\n      }\r\n\r\n      if (this.config.scrollOnImagesLoad) {\r\n\r\n        if (this.config.scrollOnImagesLoad > 1) {\r\n          setTimeout(fireEvent, parseInt(this.config.scrollOnImagesLoad, 10));\r\n        }\r\n\r\n        const imgs = document.images;\r\n        const len = imgs.length;\r\n        let counter = 0;\r\n\r\n        const incrementCounter = () => {\r\n          counter++;\r\n\r\n          if (counter === len) {\r\n            this.imagesAreLoaded = true;\r\n            fireEvent();\r\n          }\r\n        }\r\n\r\n        [].forEach.call(imgs, img => {\r\n          if (img.complete) {\r\n            incrementCounter();\r\n          } else {\r\n            img.addEventListener('load', incrementCounter, false);\r\n          }\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n    if (window.history && window.history.pushState) {\r\n      window.addEventListener('popstate', () => {\r\n        if (this.config.reloadOnGoingBack) {\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getBasePath = (anchors) => {\r\n    let newBasePath = `${window.location.origin}${window.location.pathname}`.replace(/\\/$/, '');\r\n\r\n    if (anchors) {\r\n      Object.keys(anchors).forEach(id => {\r\n        if (!anchors[id].exact && newBasePath.endsWith(anchors[id].name)) {\r\n          newBasePath = newBasePath.replace(`/${anchors[id].name}`, '');\r\n        }\r\n      });\r\n    }\r\n\r\n    return newBasePath;\r\n  }\r\n\r\n  addListeners = () => {\r\n    window.addEventListener('scroll', this.scrollHandler, true);\r\n    window.addEventListener('hashchange', this.handleHashChange);\r\n    /* window.addEventListener('onpopstate', this.getBasePath); */\r\n  }\r\n\r\n  removeListeners = () => {\r\n    window.removeEventListener('scroll', this.scrollHandler, true);\r\n    window.removeEventListener('hashchange', this.handleHashChange);\r\n    /* window.addEventListener('onpopstate', this.getBasePath); */\r\n  }\r\n\r\n  configure = (config) => {\r\n    this.config = {\r\n      ...defaultConfig,\r\n      ...config\r\n    }\r\n    this.resetDefaultMetaTags();\r\n  }\r\n\r\n  resetDefaultMetaTags = () => {\r\n    if (this.config.meta) {\r\n      this.defaultMetaTags = getDefaultMetaTags(this.config.meta);\r\n      setMetaTags(this.defaultMetaTags);\r\n    } else {\r\n      this.defaultMetaTags = getDefaultMetaTags();\r\n    }\r\n  }\r\n\r\n  setDefaultMetaTags = () => {\r\n    setMetaTags(this.defaultMetaTags);\r\n  }\r\n\r\n  goToTop = () => {\r\n    if (getScrollTop() === 0) return;\r\n    this.forcedHash = true;\r\n\r\n    scrollTo({\r\n      top: 0,\r\n      behavior: this.config.scrollBehaviour\r\n    });\r\n  }\r\n\r\n  addAnchor = ({element, name, hash, id, meta, exact}) => {\r\n    // if this is the first anchor, set up listeners\r\n    if (Object.keys(this.anchors).length === 0) {\r\n      this.addListeners();\r\n    }\r\n\r\n    const urlName = name || '';\r\n    const urlHash = hash ? `#${hash}` : '';\r\n\r\n    // check if this anchor is the current one\r\n    if (window.location.href.endsWith(`${urlName}${urlHash}`)) {\r\n      this.forceHashUpdate();\r\n    }\r\n    if (window.location.pathname.endsWith(`/${urlName}`)) {\r\n      this.basePathName = this.basePathName.replace(`/${urlName}`, '');\r\n      if (this.basePathName === '') this.basePathName = '/';\r\n    }\r\n\r\n    this.anchors[id] = {\r\n      id,\r\n      component: element,\r\n      name,\r\n      hash,\r\n      meta,\r\n      exact\r\n    };\r\n\r\n    this.basePath = this.getBasePath(this.anchors);\r\n\r\n    this.normalizeMetaTags();\r\n  }\r\n\r\n  normalizeMetaTags = () => {\r\n    Object.keys(this.anchors).forEach(anchorId => {\r\n      const anchor = this.anchors[anchorId];\r\n      if (anchor.hash && !anchor.meta) {\r\n\r\n        if (anchor.exact || !anchor.name) {\r\n          anchor.meta = this.defaultMetaTags;\r\n        } else if (anchor.name) {\r\n          const parentAnchor = getAnchoreByName(this.anchors, anchor.name);\r\n\r\n          if (parentAnchor) {\r\n            anchor.meta = parentAnchor.meta;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  removeAnchor = (id) => {\r\n    delete this.anchors[id];\r\n    // if this is the last anchor, remove listeners\r\n    if (Object.keys(this.anchors).length === 0) {\r\n      this.removeListeners();\r\n    }\r\n  }\r\n\r\n  onSectionChange = (newAnchor, oldAnchor) => {\r\n    //ADDED CODE FOR TAB SWITCH\r\n    const newHash = newAnchor.split(\"______\")[1];\r\n    const oldHash = oldAnchor.split(\"______\")[1];\r\n\r\n    if(typeof this.config.onChange === \"function\"){\r\n      this.config.onChange(newHash);\r\n      console.log(\"Called on change \"+ newHash);\r\n    }\r\n\r\n    const {onSectionEnter} = this.config;\r\n    const getPath = (anchor) => anchor.name\r\n      ? (anchor.exact ? `/${anchor.name}` : `${this.basePathName !== '/' ? this.basePathName : ''}/${anchor.name}`)\r\n      : this.basePathName;\r\n\r\n    if (typeof onSectionEnter === 'function') {\r\n      const nextState = newAnchor ? { ...this.anchors[newAnchor], id: newAnchor } : {};\r\n      nextState.path = getPath(nextState);\r\n      const prevState = oldAnchor ? { ...this.anchors[oldAnchor], id: oldAnchor } : {};\r\n      prevState.path = getPath(prevState);\r\n\r\n      onSectionEnter(nextState, prevState);\r\n    }\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const {offset, keepLastAnchorHash, affectHistory} = this.config;\r\n    const nextAnchor = getBestAnchorGivenScrollLocation(this.anchors, -offset);\r\n    const prevAnchor = getHash({manager: this});\r\n\r\n    if (nextAnchor && prevAnchor !== nextAnchor) {\r\n      this.forcedHash = true;\r\n\r\n      updateHash({\r\n        anchor: this.anchors[nextAnchor],\r\n        affectHistory,\r\n        manager: this\r\n      });\r\n\r\n      this.onSectionChange(nextAnchor, prevAnchor);\r\n\r\n    } else if (!nextAnchor && !keepLastAnchorHash) {\r\n      removeHash({manager: this});\r\n      if (this.anchors[prevAnchor]) {\r\n        this.onSectionChange(null, prevAnchor);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleHashChange = (e) => {\r\n    this.basePath = this.getBasePath(this.anchors);\r\n\r\n    if (this.forcedHash) {\r\n      this.forcedHash = false;\r\n    } else {\r\n      const hash = getHash({manager: this});\r\n      const runScrollingToSection = (delay = 0) => this.goToSection(hash, delay);\r\n\r\n      if (this.config.scrollOnImagesLoad && !this.imagesAreLoaded) {\r\n        window.addEventListener(EVENT_IMAGES_LOADED, runScrollingToSection, false);\r\n      } else {\r\n        runScrollingToSection(this.config.scrollDelay);\r\n      }\r\n    }\r\n  }\r\n\r\n  goToSection = (id, delay = 0) => {\r\n    const element = (this.anchors[id] ? this.anchors[id].component : null) || document.getElementById(id);\r\n    const {offset} = this.config;\r\n\r\n    if (element) {\r\n      setTimeout(() => {\r\n        const marginTop = ~~(element.currentStyle || window.getComputedStyle(element).marginTop.replace(/\\D+/g, ''));\r\n        const elementPosition = element.getBoundingClientRect().top;\r\n        const offsetPosition = elementPosition - offset;\r\n\r\n        scrollTo({\r\n          top: offsetPosition,\r\n          behavior: this.config.scrollBehaviour\r\n        });\r\n      }, delay);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default new Manager()","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Manager from './Manager';\r\nimport {createId} from './utils/func';\r\nimport { updateHash, removeHash } from './utils/hash';\r\n\r\n//from https://github.com/pvoznyuk/react-update-url-on-scroll\r\nexport default class ScrollableSection extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.node,\r\n      PropTypes.array\r\n    ]),\r\n    name: PropTypes.string,\r\n    hash: PropTypes.string,\r\n    onEnter: PropTypes.func\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.name = (props.name || '').replace(/^\\//, '') || null;\r\n    this.hash = (props.hash || '').replace(/^\\#/, '') || props.children.ref || null;\r\n    this.meta = props.meta || null;\r\n    this.id = createId({name: this.name, hash: this.hash});\r\n    this.offset = props.offset;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const element = ReactDOM.findDOMNode(this.refs[Object.keys(this.refs)[0]]);\r\n\r\n    Manager.addAnchor({\r\n      element,\r\n      name: this.name,\r\n      hash: this.hash,\r\n      exact: !!this.props.exact,\r\n      id: this.id,\r\n      meta: this.meta\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Manager.removeAnchor(this.id);\r\n  }\r\n\r\n  render() {\r\n    const {children, name, hash, title, formatTitle, ...props} = this.props;\r\n\r\n    if (Array.isArray(children)) {\r\n      return (\r\n        <div ref={this.id} {...props}>\r\n          {React.Children.map(children, child => (\r\n            React.cloneElement(child, {})\r\n          ))}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return React.cloneElement(children, {\r\n      ref: children.ref || this.id,\r\n      ...props\r\n    });\r\n\r\n  }\r\n}\r\n\r\nScrollableSection.defaultProps = {\r\n \r\n};\r\n\r\n\r\nexport class ScrollableLink extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const { href } = this.props;\r\n\r\n    if (href && href !== '/' && href !== '#') {\r\n      const pathParts = href.split('#');\r\n      const name = pathParts[0].replace(/^\\//, '') || null;\r\n      const hash = pathParts[1] || null;\r\n      const id = createId({name, hash});\r\n\r\n      if (Manager.anchors[id]) {\r\n        updateHash({\r\n          anchor: Manager.anchors[id],\r\n          affectHistory: false,\r\n          manager: Manager\r\n        });\r\n\r\n        Manager.goToSection(id);\r\n      }\r\n    } else {\r\n      removeHash({manager: Manager});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    if (Array.isArray(children)) {\r\n      return (\r\n        <span onClick={this.handleClick}>\r\n          {React.Children.map(children, child => (\r\n            React.cloneElement(child, {})\r\n          ))}\r\n        </span>\r\n      )\r\n    }\r\n\r\n    return React.cloneElement(children, {\r\n      onClick: this.handleClick\r\n    });\r\n\r\n  }\r\n}","import Manager from './Manager';\r\nexport const goToTop = Manager.goToTop;\r\nexport const configureAnchors = Manager.configure;\r\n\r\nexport { setMetaTags } from './utils/meta';\r\nexport { updateHash as goToAnchor, removeHash } from './utils/hash';\r\nexport { default, ScrollableLink } from './ScrollableSection'","import React from \"react\";\r\nimport { BrowserRouter} from \"react-router-dom\";\r\n\r\nimport Experience from \"./Experience\";\r\nimport Contact from \"./Contact\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport Skills from \"./Skills\";\r\nimport NavTabs from \"./NavTabs\";\r\n\r\nimport {Typography, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nimport ScrollableSection from './custom_scrollable-section';\r\nimport {configureAnchors} from \"./custom_scrollable-section\";\r\n\r\nimport {Sticky, StickyContainer} from 'react-sticky';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n  \r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        paddingTop : 0,\r\n        marginTop:0,\r\n        },\r\n});\r\nclass Main extends React.Component{\r\n\r\n    state = {\r\n        activeTabIndex: 'about',\r\n    };\r\n\r\n    navigate(newValue){\r\n        this.setState((prevState,props)=>({\r\n            activeTabIndex: newValue\r\n        }));\r\n    }\r\n    //Handle change in tab selection\r\n    handleChange = (event, value) => {\r\n        this.setState({ activeTabIndex: value });\r\n    };\r\n    //Scroll to desired hash with offset for the header\r\n    scrollWithOffset (el, offset)\r\n    {\r\n        const elementPosition = el.offsetTop - offset;\r\n        window.scroll({\r\n          top: elementPosition,\r\n          left: 0,\r\n          behavior: \"smooth\"\r\n        });    \r\n    }\r\n\r\n    render(){   \r\n        const divStyle = {\r\n            marginBottom : \"400px\", \r\n            marginTop: '20px'\r\n        }\r\n        const { classes } = this.props;\r\n        const headerSize = 70;\r\n        configureAnchors({offset: 90, keepLastAnchorHash : true, onChange : (newValue) => this.navigate(newValue)})\r\n        return (\r\n            <div>\r\n                <header style={{margin : '20px'}}>\r\n                    <Typography variant=\"h2\" component=\"h1\" >\r\n                        Carles Pérez Onielfa\r\n                    </Typography>\r\n                </header>\r\n                <StickyContainer>\r\n                    <BrowserRouter>\r\n                        <Sticky>{({ style }) => <div style={style}>\r\n                            <Paper className={classes.root}>       \r\n                                <Tabs\r\n                                    value={this.state.activeTabIndex}\r\n                                    onChange={this.handleChange}\r\n                                    indicatorColor=\"primary\"\r\n                                    textColor=\"primary\"\r\n                                    centered\r\n                                >\r\n                                    <Tab label=\"About me\" value  = 'about' component={Link} to=\"#about\" scroll={el => this.scrollWithOffset(el, headerSize)}/>\r\n                                    <Tab label=\"Experience\" value  = 'experience' component={Link} to=\"#experience\" scroll={el => this.scrollWithOffset(el, headerSize)}/>\r\n                                    <Tab label=\"Skills\" value  = 'skills' component={Link} to=\"#skills\" scroll={el => this.scrollWithOffset(el, headerSize)}/>\r\n                                    <Tab label=\"Contact\" value = 'contact' component={Link} to=\"#contact\" scroll={el => this.scrollWithOffset(el, headerSize)}/>\r\n                                </Tabs>\r\n                            </Paper>\r\n                        </div>}</Sticky>\r\n                    </BrowserRouter>\r\n\r\n                    <ScrollableSection hash={'about'} id = 'about'>\r\n                        <div style={divStyle}>   \r\n                            <AboutMe/>\r\n                        </div>\r\n                    </ScrollableSection>\r\n\r\n                    <ScrollableSection hash={'experience'} id = 'experience'>\r\n                        <div style={divStyle}>\r\n                            <Experience/>\r\n                        </div>\r\n                    </ScrollableSection>\r\n\r\n                    <ScrollableSection hash={'skills'} id = 'skills'>\r\n                        <div style={divStyle}>\r\n                            <Skills/>\r\n                        </div>\r\n                    </ScrollableSection>\r\n                    <ScrollableSection hash={'contact'} id = 'contact'>\r\n                        <div style={divStyle}>\r\n                            <Contact/>\r\n                        </div>\r\n                    </ScrollableSection>\r\n                </StickyContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nMain.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default withStyles(styles)(Main);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Main from \"./Main\";\r\nimport 'typeface-roboto';\r\n//import \"./index.css\";\r\nReactDOM.render(\r\n  <Main/>, \r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}