{"version":3,"sources":["Experience.js","Contact.js","AboutMe.js","Skills.js","Tabs.js","custom_scrollable-section/utils/func.js","custom_scrollable-section/utils/scroll.js","custom_scrollable-section/utils/meta.js","custom_scrollable-section/utils/hash.js","custom_scrollable-section/Manager.js","custom_scrollable-section/ScrollableSection.js","custom_scrollable-section/index.js","Main_new.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","Experience","classes","Paper","className","Typography","variant","component","Contact","AboutMe","Skills","flexGrow","paddingTop","marginTop","NavTabs","React","useState","value","setValue","scrollWithOffset","el","offset","elementPosition","offsetTop","window","scroll","top","left","behavior","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","Link","to","debounce","func","wait","immediate","timeout","context","argss","args","later","apply","callNow","clearTimeout","setTimeout","createId","name","hash","scrollTo","options","test","navigator","userAgent","animatedScrollTo","speed","getScrollTop","document","body","scrollTop","documentElement","getElementOffset","element","getBoundingClientRect","bottom","Math","floor","checkElementRelevance","el1","el2","contains","top1","bottom1","top2","bottom2","checkLocationRelevance","getBestAnchorGivenScrollLocation","anchors","bestId","bestElement","Object","keys","forEach","id","extraOffset","offsetHeight","doesElementContainScrollTop","getMetaTagName","item","getAttribute","getMeta","metaName","metas","getElementsByTagName","arrayFrom","find","setMetaTags","metaTagsList","title","metaTags","tagName","currentTag","setAttribute","meta","createElement","appendChild","parentNode","removeChild","getDefaultMetaTags","reduce","acc","basePath","location","origin","pathname","getHash","manager","replace","slice","decodeURI","updateHash","anchor","affectHistory","exact","method","newPath","history","undefined","setDefaultMetaTags","removeHash","replaceState","defaultMetaTags","defaultConfig","keepLastAnchorHash","scrollBehaviour","scrollDelay","scrollOnImagesLoad","onSectionEnter","reloadOnGoingBack","getBasePath","newBasePath","endsWith","addListeners","addEventListener","scrollHandler","handleHashChange","removeListeners","removeEventListener","configure","config","resetDefaultMetaTags","goToTop","forcedHash","addAnchor","length","urlName","urlHash","href","forceHashUpdate","basePathName","normalizeMetaTags","anchorId","parentAnchor","object","key","getAnchoreByName","removeAnchor","onSectionChange","newAnchor","oldAnchor","split","getPath","nextState","path","prevState","handleScroll","nextAnchor","prevAnchor","e","runScrollingToSection","delay","goToSection","imagesAreLoaded","getElementById","currentStyle","getComputedStyle","this","eventDispatched","fireEvent","Event","dispatchEvent","parseInt","imgs","images","len","counter","incrementCounter","call","img","complete","pushState","reload","ScrollableSection","props","children","ref","ReactDOM","findDOMNode","refs","Manager","formatTitle","Array","isArray","Children","map","child","cloneElement","Component","defaultProps","configureAnchors","Main","divStyle","marginBottom","style","margin","render"],"mappings":"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","file":"static/js/main.c260b803.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}))\r\nexport default function Experience(){\r\n  const classes = useStyles();\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Typography variant=\"h4\" component=\"h2\">\r\n            Experience\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Paper can be used to build surface or other elements for your application.\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n          </Typography>\r\n        </Paper>\r\n     </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}))\r\n\r\nexport default function Contact() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Contact\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Paper can be used to build surface or other elements for your application.\r\n        </Typography>\r\n      </Paper>\r\n   </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}))\r\n\r\nexport default function AboutMe() {\r\n    const classes = useStyles();\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Typography variant=\"h4\" component=\"h2\">\r\n            About me\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Paper can be used to build surface or other elements for your application.\r\n          </Typography>\r\n        </Paper>\r\n     </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}))\r\n\r\nexport default function Skills() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Skills\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Paper can be used to build surface or other elements for your application.\r\n        </Typography>\r\n      </Paper>\r\n   </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Tab, Tabs, Paper} from '@material-ui/core/';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        paddingTop : 0,\r\n        marginTop:0,\r\n      },\r\n  }))\r\n\r\n/**\r\n * Navigation tabs, scroll to desired hash on click, always visible at the top\r\n */\r\nexport default function NavTabs(){\r\n    const [value, setValue] = React.useState(0);\r\n    //Handle change in tab selection\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue);\r\n    }\r\n    //Scroll to desired hash with offset for the header\r\n    const scrollWithOffset = (el, offset) => {\r\n        const elementPosition = el.offsetTop - offset;\r\n        window.scroll({\r\n          top: elementPosition,\r\n          left: 0,\r\n          behavior: \"smooth\"\r\n        });    \r\n    }\r\n    const headerSize = 60;\r\n    const classes = useStyles();\r\n    return(\r\n        <Paper className={classes.root}>       \r\n            <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n            >\r\n                <Tab label=\"About me\" component={Link} to=\"#about\" scroll={el => scrollWithOffset(el, headerSize)}/>\r\n                <Tab label=\"Experience\" component={Link} to=\"#experience\" scroll={el => scrollWithOffset(el, headerSize)}/>\r\n                <Tab label=\"Skills\" component={Link} to=\"#skills\" scroll={el => scrollWithOffset(el, headerSize)}/>\r\n                <Tab label=\"Contact\" component={Link} to=\"#contact\" scroll={el => scrollWithOffset(el, headerSize)}/>\r\n            </Tabs>\r\n        \r\n        </Paper>\r\n    );\r\n}","export const debounce = (func, wait, immediate) => {\n  let timeout\n  return (...argss) => {\n    const context = this\n    const args = argss\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(context, args)\n      }\n    }\n    const callNow = immediate && !timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n    if (callNow) {\n      func.apply(context, args)\n    }\n  }\n}\n\nexport const createId = ({name, hash}) => `___scroll-section___${name || ''}___${hash || ''}`;\n\nexport const getAnchoreByName = (object = {}, name) => {\n  const key = Object.keys(object).find(key => object[key].name === name && !object[key].hash);\n  return key ? object[key] : null;\n}\n","import animatedScrollTo from 'animated-scroll-to';\n\nexport const scrollTo = (options) => {\n  const isIE = /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent);\n\n  if (isIE) {\n    animatedScrollTo(options.top, {\n      speed: options.behavior === 'smooth' ? 500 : 0,\n    });\n  } else {\n    window.scrollTo(options);\n  }\n}\n\nexport const getScrollTop = () => {\n  return document.body.scrollTop || document.documentElement.scrollTop\n}\n\n// get vertical offsets of element, taking scrollTop into consideration\nexport const getElementOffset = (element) => {\n  const scrollTop = getScrollTop()\n  const {top, bottom} = element ? element.getBoundingClientRect() : {top: 0, bottom: 0};\n  return {\n    top: Math.floor(top + scrollTop),\n    bottom: Math.floor(bottom + scrollTop)\n  }\n}\n\n// does scrollTop live within element bounds?\nexport const doesElementContainScrollTop = (element, extraOffset = 0) => {\n  const scrollTop = getScrollTop();\n  const offsetTop = getElementOffset(element).top + extraOffset;\n  return scrollTop >= offsetTop && scrollTop < offsetTop + element.offsetHeight;\n}\n\n// is el2's location more relevant than el2,\n// parent-child relationship aside?\nexport const checkLocationRelevance = (el1, el2) => {\n  const {top: top1, bottom: bottom1} = getElementOffset(el1);\n  const {top: top2, bottom: bottom2} = getElementOffset(el2);\n  if (top1 === top2) {\n    if (bottom1 === bottom2) {\n      // top and bottom of compared elements are the same,\n      // so return one randomly in a deterministic way\n      return el1 < el2;\n    }\n    // top of compared elements is the same, so return whichever\n    // element has its bottom higher on the page\n    return bottom2 < bottom1;\n  }\n  // top of compared elements differ, so return true\n  // if tested element has its top lower on the page\n  return top2 > top1;\n}\n\n// check if el2 is more relevant than el1, considering child-parent\n// relationships as well as node location.\nexport const checkElementRelevance = (el1, el2) => {\n  if (el1.contains(el2)) {\n    // el2 is child, so it gains relevance priority\n    return true;\n  } else if (!el2.contains(el1) && checkLocationRelevance(el1, el2)) {\n    // el1 and el2 are unrelated, but el2 has a better location,\n    // so it gains relevance priority\n    return true;\n  }\n  return false;\n}\n\n// given a set of anchors, find which one is, given the following logic:\n// 1. children nodes are more relevant than parent nodes\n// 2. if neither node contains the other, and their top locations differ,\n//    the node with the top lower on the page is more relevant\n// 3. if neither node contains the other, and their top locations are the same,\n//    the node with the bottom higher on the page is more relevant\n// 4. if neither node contains the other, and their top and bottom locations\n//    are the same, a node is chosen at random, in a deterministic way,\n//    to be more relevant.\nexport const getBestAnchorGivenScrollLocation = (anchors, offset) => {\n  let bestId, bestElement\n\n  Object.keys(anchors).forEach((id) => {\n    const element = anchors[id].component;\n    if (doesElementContainScrollTop(element, offset)) {\n      if (!bestElement || checkElementRelevance(bestElement, element)) {\n        bestElement = element;\n        bestId = id;\n      }\n    }\n  })\n  return bestId;\n}\n","import arrayFrom from 'array-from';\n\nconst getMetaTagName = (item) => item.getAttribute('name') || item.getAttribute('property');\n\nconst getMeta = (metaName) => {\n  const metas = document.getElementsByTagName('meta');\n  return arrayFrom(metas).find(item => getMetaTagName(item) === metaName);\n}\n\nexport const setMetaTags = (metaTagsList = {}) => {\n  const {title, ...metaTags} = metaTagsList;\n\n  if (title) {\n    document.title = title;\n  }\n\n  Object.keys(metaTags).forEach(tagName => {\n    const currentTag = getMeta(tagName);\n\n    if (!metaTags[tagName]) {\n      // remove meta tags\n      if (currentTag) {\n        currentTag.parentNode.removeChild(currentTag);\n      }\n\n      return;\n    }\n\n    if (currentTag) {\n      // update a meta tag\n      currentTag.setAttribute('content', metaTags[tagName]);\n    } else {\n      // create a meta tag\n      const meta = document.createElement('meta');\n      meta.name = tagName;\n      meta.setAttribute('content', metaTags[tagName]);\n      document.getElementsByTagName('head')[0].appendChild(meta);\n    }\n  });\n\n}\n\nexport const getDefaultMetaTags = (metaTags) => {\n  if(metaTags) {\n    return metaTags;\n  }\n\n  const metas = document.getElementsByTagName('meta');\n\n  return arrayFrom(metas).reduce((acc, item) => {\n    return {...acc, [getMetaTagName(item)]: item.getAttribute('content')}\n  }, { title: document.title });\n}\n","import {createId} from './func';\nimport {setMetaTags} from './meta';\n\nconst basePath = `${window.location.origin}${window.location.pathname}`;\n\nconst getCurrentHash = () => decodeURI(window.location.hash.slice(1));\n\nexport const getHash = ({manager}) => {\n  const {basePath} = manager;\n  const name = window.location.pathname.replace(basePath.replace(window.location.origin, ''), '').slice(1);\n  const hash = getCurrentHash();\n  return createId({name, hash});\n}\n\nexport const updateHash = ({anchor, affectHistory, manager}) => {\n  \n  const {hash, name, meta, exact} = anchor;\n  const {basePath} = manager;\n  const method = affectHistory ? 'pushState' : 'replaceState';\n  const newPath = `${name ? `${exact ? window.location.origin : basePath}/${name}` : basePath}${hash ? `#${hash}` : ''}`;\n\n  window.history[method](undefined, undefined, newPath);\n\n  if (meta) {\n    setMetaTags(meta);\n  } else {\n    manager.setDefaultMetaTags();\n  }\n}\n\n// remove hash in url without affecting history or forcing reload\nexport const removeHash = ({manager}) => {\n  window.history.replaceState(\n    undefined,\n    manager.defaultMetaTags.title,\n    manager ? manager.basePath : basePath\n  );\n\n  manager.setDefaultMetaTags();\n}\n","import { debounce, getAnchoreByName } from './utils/func';\r\nimport { getBestAnchorGivenScrollLocation, getScrollTop, scrollTo } from './utils/scroll';\r\nimport { getHash, updateHash, removeHash } from './utils/hash';\r\nimport { setMetaTags, getDefaultMetaTags } from './utils/meta';\r\n\r\nconst defaultConfig = {\r\n  affectHistory: false,\r\n  debounce: 100,\r\n  keepLastAnchorHash: false,\r\n  offset: 0,\r\n  scrollBehaviour: 'smooth',\r\n  scrollDelay: 0,\r\n  scrollOnImagesLoad: false,\r\n  onSectionEnter: null,\r\n  meta: null,\r\n  reloadOnGoingBack: false\r\n}\r\n\r\nconst EVENT_IMAGES_LOADED = 'images:loaded';\r\n\r\nclass Manager {\r\n  constructor() {\r\n    this.anchors = {};\r\n    this.forcedHash = false;\r\n    this.config = defaultConfig;\r\n\r\n    this.scrollHandler = debounce(this.handleScroll, ~~this.config.debounce);\r\n    this.forceHashUpdate = debounce(this.handleHashChange, 1);\r\n\r\n    this.basePath = this.getBasePath();\r\n    this.basePathName = window.location.pathname;\r\n    this.imagesAreLoaded = false;\r\n\r\n    this.resetDefaultMetaTags();\r\n\r\n    setTimeout(() => {\r\n      let eventDispatched = false;\r\n      const fireEvent = () => {\r\n        if (!eventDispatched) {\r\n          const event = new Event(EVENT_IMAGES_LOADED);\r\n          window.dispatchEvent(event);\r\n        }\r\n        eventDispatched = true;\r\n      }\r\n\r\n      if (this.config.scrollOnImagesLoad) {\r\n\r\n        if (this.config.scrollOnImagesLoad > 1) {\r\n          setTimeout(fireEvent, parseInt(this.config.scrollOnImagesLoad, 10));\r\n        }\r\n\r\n        const imgs = document.images;\r\n        const len = imgs.length;\r\n        let counter = 0;\r\n\r\n        const incrementCounter = () => {\r\n          counter++;\r\n\r\n          if (counter === len) {\r\n            this.imagesAreLoaded = true;\r\n            fireEvent();\r\n          }\r\n        }\r\n\r\n        [].forEach.call(imgs, img => {\r\n          if (img.complete) {\r\n            incrementCounter();\r\n          } else {\r\n            img.addEventListener('load', incrementCounter, false);\r\n          }\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n    if (window.history && window.history.pushState) {\r\n      window.addEventListener('popstate', () => {\r\n        if (this.config.reloadOnGoingBack) {\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getBasePath = (anchors) => {\r\n    let newBasePath = `${window.location.origin}${window.location.pathname}`.replace(/\\/$/, '');\r\n\r\n    if (anchors) {\r\n      Object.keys(anchors).forEach(id => {\r\n        if (!anchors[id].exact && newBasePath.endsWith(anchors[id].name)) {\r\n          newBasePath = newBasePath.replace(`/${anchors[id].name}`, '');\r\n        }\r\n      });\r\n    }\r\n\r\n    return newBasePath;\r\n  }\r\n\r\n  addListeners = () => {\r\n    window.addEventListener('scroll', this.scrollHandler, true);\r\n    window.addEventListener('hashchange', this.handleHashChange);\r\n    /* window.addEventListener('onpopstate', this.getBasePath); */\r\n  }\r\n\r\n  removeListeners = () => {\r\n    window.removeEventListener('scroll', this.scrollHandler, true);\r\n    window.removeEventListener('hashchange', this.handleHashChange);\r\n    /* window.addEventListener('onpopstate', this.getBasePath); */\r\n  }\r\n\r\n  configure = (config) => {\r\n    this.config = {\r\n      ...defaultConfig,\r\n      ...config\r\n    }\r\n    this.resetDefaultMetaTags();\r\n  }\r\n\r\n  resetDefaultMetaTags = () => {\r\n    if (this.config.meta) {\r\n      this.defaultMetaTags = getDefaultMetaTags(this.config.meta);\r\n      setMetaTags(this.defaultMetaTags);\r\n    } else {\r\n      this.defaultMetaTags = getDefaultMetaTags();\r\n    }\r\n  }\r\n\r\n  setDefaultMetaTags = () => {\r\n    setMetaTags(this.defaultMetaTags);\r\n  }\r\n\r\n  goToTop = () => {\r\n    if (getScrollTop() === 0) return;\r\n    this.forcedHash = true;\r\n\r\n    scrollTo({\r\n      top: 0,\r\n      behavior: this.config.scrollBehaviour\r\n    });\r\n  }\r\n\r\n  addAnchor = ({element, name, hash, id, meta, exact}) => {\r\n    // if this is the first anchor, set up listeners\r\n    if (Object.keys(this.anchors).length === 0) {\r\n      this.addListeners();\r\n    }\r\n\r\n    const urlName = name || '';\r\n    const urlHash = hash ? `#${hash}` : '';\r\n\r\n    // check if this anchor is the current one\r\n    if (window.location.href.endsWith(`${urlName}${urlHash}`)) {\r\n      this.forceHashUpdate();\r\n    }\r\n    if (window.location.pathname.endsWith(`/${urlName}`)) {\r\n      this.basePathName = this.basePathName.replace(`/${urlName}`, '');\r\n      if (this.basePathName === '') this.basePathName = '/';\r\n    }\r\n\r\n    this.anchors[id] = {\r\n      id,\r\n      component: element,\r\n      name,\r\n      hash,\r\n      meta,\r\n      exact\r\n    };\r\n\r\n    this.basePath = this.getBasePath(this.anchors);\r\n\r\n    this.normalizeMetaTags();\r\n  }\r\n\r\n  normalizeMetaTags = () => {\r\n    Object.keys(this.anchors).forEach(anchorId => {\r\n      const anchor = this.anchors[anchorId];\r\n      if (anchor.hash && !anchor.meta) {\r\n\r\n        if (anchor.exact || !anchor.name) {\r\n          anchor.meta = this.defaultMetaTags;\r\n        } else if (anchor.name) {\r\n          const parentAnchor = getAnchoreByName(this.anchors, anchor.name);\r\n\r\n          if (parentAnchor) {\r\n            anchor.meta = parentAnchor.meta;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  removeAnchor = (id) => {\r\n    delete this.anchors[id];\r\n    // if this is the last anchor, remove listeners\r\n    if (Object.keys(this.anchors).length === 0) {\r\n      this.removeListeners();\r\n    }\r\n  }\r\n\r\n  onSectionChange = (newAnchor, oldAnchor) => {\r\n    //ADDED CODE FOR TAB SWITCH\r\n    const newHash = newAnchor.split(\"______\")[1]\r\n    const oldHash = oldAnchor.split(\"______\")[1]\r\n\r\n\r\n\r\n    const {onSectionEnter} = this.config;\r\n    const getPath = (anchor) => anchor.name\r\n      ? (anchor.exact ? `/${anchor.name}` : `${this.basePathName !== '/' ? this.basePathName : ''}/${anchor.name}`)\r\n      : this.basePathName;\r\n\r\n    if (typeof onSectionEnter === 'function') {\r\n      const nextState = newAnchor ? { ...this.anchors[newAnchor], id: newAnchor } : {};\r\n      nextState.path = getPath(nextState);\r\n      const prevState = oldAnchor ? { ...this.anchors[oldAnchor], id: oldAnchor } : {};\r\n      prevState.path = getPath(prevState);\r\n\r\n      onSectionEnter(nextState, prevState);\r\n    }\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const {offset, keepLastAnchorHash, affectHistory} = this.config;\r\n    const nextAnchor = getBestAnchorGivenScrollLocation(this.anchors, -offset);\r\n    const prevAnchor = getHash({manager: this});\r\n\r\n    if (nextAnchor && prevAnchor !== nextAnchor) {\r\n      this.forcedHash = true;\r\n\r\n      updateHash({\r\n        anchor: this.anchors[nextAnchor],\r\n        affectHistory,\r\n        manager: this\r\n      });\r\n\r\n      this.onSectionChange(nextAnchor, prevAnchor);\r\n\r\n    } else if (!nextAnchor && !keepLastAnchorHash) {\r\n      removeHash({manager: this});\r\n      if (this.anchors[prevAnchor]) {\r\n        this.onSectionChange(null, prevAnchor);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleHashChange = (e) => {\r\n    this.basePath = this.getBasePath(this.anchors);\r\n\r\n    if (this.forcedHash) {\r\n      this.forcedHash = false;\r\n    } else {\r\n      const hash = getHash({manager: this});\r\n      const runScrollingToSection = (delay = 0) => this.goToSection(hash, delay);\r\n\r\n      if (this.config.scrollOnImagesLoad && !this.imagesAreLoaded) {\r\n        window.addEventListener(EVENT_IMAGES_LOADED, runScrollingToSection, false);\r\n      } else {\r\n        runScrollingToSection(this.config.scrollDelay);\r\n      }\r\n    }\r\n  }\r\n\r\n  goToSection = (id, delay = 0) => {\r\n    const element = (this.anchors[id] ? this.anchors[id].component : null) || document.getElementById(id);\r\n    const {offset} = this.config;\r\n\r\n    if (element) {\r\n      setTimeout(() => {\r\n        const marginTop = ~~(element.currentStyle || window.getComputedStyle(element).marginTop.replace(/\\D+/g, ''));\r\n        const elementPosition = element.getBoundingClientRect().top;\r\n        const offsetPosition = elementPosition - offset;\r\n\r\n        scrollTo({\r\n          top: offsetPosition,\r\n          behavior: this.config.scrollBehaviour\r\n        });\r\n      }, delay);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default new Manager()","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Manager from './Manager';\r\nimport {createId} from './utils/func';\r\nimport { updateHash, removeHash } from './utils/hash';\r\n\r\n//from https://github.com/pvoznyuk/react-update-url-on-scroll\r\nexport default class ScrollableSection extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.node,\r\n      PropTypes.array\r\n    ]),\r\n    name: PropTypes.string,\r\n    hash: PropTypes.string,\r\n    onEnter: PropTypes.func\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.name = (props.name || '').replace(/^\\//, '') || null;\r\n    this.hash = (props.hash || '').replace(/^\\#/, '') || props.children.ref || null;\r\n    this.meta = props.meta || null;\r\n    this.id = createId({name: this.name, hash: this.hash});\r\n    this.offset = props.offset;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const element = ReactDOM.findDOMNode(this.refs[Object.keys(this.refs)[0]]);\r\n\r\n    Manager.addAnchor({\r\n      element,\r\n      name: this.name,\r\n      hash: this.hash,\r\n      exact: !!this.props.exact,\r\n      id: this.id,\r\n      meta: this.meta\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Manager.removeAnchor(this.id);\r\n  }\r\n\r\n  render() {\r\n    const {children, name, hash, title, formatTitle, ...props} = this.props;\r\n\r\n    if (Array.isArray(children)) {\r\n      return (\r\n        <div ref={this.id} {...props}>\r\n          {React.Children.map(children, child => (\r\n            React.cloneElement(child, {})\r\n          ))}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return React.cloneElement(children, {\r\n      ref: children.ref || this.id,\r\n      ...props\r\n    });\r\n\r\n  }\r\n}\r\n\r\nScrollableSection.defaultProps = {\r\n \r\n};\r\n\r\n\r\nexport class ScrollableLink extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    const { href } = this.props;\r\n\r\n    if (href && href !== '/' && href !== '#') {\r\n      const pathParts = href.split('#');\r\n      const name = pathParts[0].replace(/^\\//, '') || null;\r\n      const hash = pathParts[1] || null;\r\n      const id = createId({name, hash});\r\n\r\n      if (Manager.anchors[id]) {\r\n        updateHash({\r\n          anchor: Manager.anchors[id],\r\n          affectHistory: false,\r\n          manager: Manager\r\n        });\r\n\r\n        Manager.goToSection(id);\r\n      }\r\n    } else {\r\n      removeHash({manager: Manager});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    if (Array.isArray(children)) {\r\n      return (\r\n        <span onClick={this.handleClick}>\r\n          {React.Children.map(children, child => (\r\n            React.cloneElement(child, {})\r\n          ))}\r\n        </span>\r\n      )\r\n    }\r\n\r\n    return React.cloneElement(children, {\r\n      onClick: this.handleClick\r\n    });\r\n\r\n  }\r\n}","import Manager from './Manager';\r\nexport const goToTop = Manager.goToTop;\r\nexport const configureAnchors = Manager.configure;\r\n\r\nexport { setMetaTags } from './utils/meta';\r\nexport { updateHash as goToAnchor, removeHash } from './utils/hash';\r\nexport { default, ScrollableLink } from './ScrollableSection'","import React from \"react\";\r\nimport Experience from \"./Experience\";\r\nimport Contact from \"./Contact\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport Skills from \"./Skills\";\r\nimport NavTabs from \"./Tabs\";\r\nimport {Typography, Paper} from \"@material-ui/core\";\r\nimport { BrowserRouter} from \"react-router-dom\";\r\nimport ScrollableSection from './custom_scrollable-section';\r\nimport {configureAnchors} from \"./custom_scrollable-section\";\r\nimport {Sticky, StickyContainer} from 'react-sticky'\r\n\r\nclass Main extends React.Component{\r\n\r\n    render(){\r\n        \r\n        const divStyle = {\r\n            marginBottom : \"400px\", \r\n            marginTop: '20px'\r\n        }\r\n        configureAnchors({offset: 90, keepLastAnchorHash : true})\r\n        return (\r\n            <div>\r\n                <header style={{margin : '20px'}}>\r\n                    <Typography variant=\"h2\" component=\"h1\" >\r\n                        Carles Pérez Onielfa\r\n                    </Typography>\r\n                </header>\r\n                <StickyContainer>\r\n                    <BrowserRouter>\r\n                        <Sticky>{({ style }) => <div style={style}>\r\n                            <NavTabs/>\r\n                        </div>}</Sticky>\r\n                    </BrowserRouter>\r\n\r\n                    <ScrollableSection hash={'about'} id = 'about'>\r\n                        <div style={divStyle}>   \r\n                            <AboutMe/>\r\n                        </div>\r\n                    </ScrollableSection>\r\n\r\n                    <ScrollableSection hash={'experience'} id = 'experience'>\r\n                        <div style={divStyle}>\r\n                            <Experience/>\r\n                        </div>\r\n                    </ScrollableSection>\r\n\r\n                    <ScrollableSection hash={'skills'} id = 'skills'>\r\n                        <div style={divStyle}>\r\n                            <Skills/>\r\n                        </div>\r\n                    </ScrollableSection>\r\n                    <ScrollableSection hash={'contact'} id = 'contact'>\r\n                        <div style={divStyle}>\r\n                            <Contact/>\r\n                        </div>\r\n                    </ScrollableSection>\r\n                </StickyContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Main","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Main from \"./Main_new\";\r\nimport 'typeface-roboto';\r\n//import \"./index.css\";\r\nReactDOM.render(\r\n  <Main/>, \r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}